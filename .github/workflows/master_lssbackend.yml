name: Build and deploy PHP app to Azure Web App - lssbackend

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Check if composer.json exists
        id: check_files
        uses: andstor/file-existence-action@v1
        with:
          files: 'composer.json'

      - name: Run composer install if composer.json exists
        if: steps.check_files.outputs.files_exists == 'true'
        run: composer validate --no-check-publish && composer install --prefer-dist --no-progress

      - name: Create .env file dynamically
        run: |
          echo "APP_NAME=LSSbackend" >> .env
          echo "APP_ENV=production" >> .env
          echo "APP_DEBUG=false" >> .env
          echo "APP_URL=https://lssbackend.azurewebsites.net" >> .env
          echo "LOG_CHANNEL=stack" >> .env
          echo "DB_CONNECTION=mysql" >> .env
          echo "DB_HOST=warehousedb.mysql.database.azure.com" >> .env
          echo "DB_PORT=3306" >> .env
          echo "DB_DATABASE=lss" >> .env
          echo "DB_USERNAME=warehouselogin" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "CACHE_DRIVER=file" >> .env
          echo "SESSION_DRIVER=file" >> .env
          echo "QUEUE_CONNECTION=sync" >> .env
          echo "MYSQL_ATTR_SSL_CA=/home/site/wwwroot/DigiCertGlobalRootCA.crt.pem" >> .env

      - name: Generate Laravel APP_KEY
        run: php artisan key:generate --force

      - name: Zip artifact for deployment
        run: zip release.zip ./* -r

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: php-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: php-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_XXXX }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_XXXX }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_XXXX }}

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'lssbackend'
          slot-name: 'Production'
          package: .
